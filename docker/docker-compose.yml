version: '3.8'

services:
  # ChromaDB - Vector database for semantic search
  chromadb:
    image: chromadb/chroma:latest
    container_name: querymind-chromadb
    ports:
      - "${CHROMADB_PORT:-8000}:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_AUTH_CREDENTIALS_PROVIDER=${CHROMA_AUTH_PROVIDER:-chromadb.auth.token.TokenAuthCredentialsProvider}
      - CHROMA_SERVER_AUTH_CREDENTIALS=${CHROMA_AUTH_TOKEN:-}
      - CHROMA_SERVER_AUTH_TOKEN_TRANSPORT_HEADER=${CHROMA_AUTH_HEADER:-X-Chroma-Token}
      - ANONYMIZED_TELEMETRY=${CHROMA_TELEMETRY:-false}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - querymind-network

  # Ollama - Local LLM inference server
  ollama:
    image: ollama/ollama:latest
    container_name: querymind-ollama
    ports:
      - "${OLLAMA_PORT:-11434}:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
      - OLLAMA_MODELS=${OLLAMA_MODELS_DIR:-/root/.ollama/models}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - querymind-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    # GPU support (comment out if no GPU)
    # runtime: nvidia

  # Redis - Cache layer for query results
  redis:
    image: redis:7-alpine
    container_name: querymind-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory ${REDIS_MAX_MEMORY:-2gb}
      --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - querymind-network

  # QueryMind MCP Server - Model Context Protocol server for Claude Code/Aider
  querymind-mcp:
    build:
      context: ..
      dockerfile: docker/Dockerfile.mcp
    container_name: querymind-mcp
    ports:
      - "${MCP_PORT:-5173}:5173"
    volumes:
      - ${VAULT_PATH:-/path/to/your/vault}:/vault:ro
      - querymind_sessions:/app/sessions
    environment:
      # Service connections
      - CHROMADB_URL=http://chromadb:8000
      - OLLAMA_URL=http://ollama:11434
      - REDIS_URL=redis://redis:6379

      # Vault configuration
      - VAULT_PATH=/vault
      - CHROMADB_COLLECTION=${COLLECTION_NAME:-obsidian_vault_mxbai}

      # Agent configuration
      - ROUTER_FAST_THRESHOLD=${ROUTER_FAST_THRESHOLD:-10}
      - CACHE_TTL_GATHER=${CACHE_TTL_GATHER:-300}
      - CACHE_TTL_QUERY=${CACHE_TTL_QUERY:-3600}

      # External services (optional)
      - SERPER_API_KEY=${SERPER_API_KEY:-}

      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONUNBUFFERED=1
    depends_on:
      chromadb:
        condition: service_healthy
      ollama:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - querymind-network

  # QueryMind API (Optional) - REST API for non-MCP integrations
  querymind-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    container_name: querymind-api
    ports:
      - "${API_PORT:-8080}:8080"
    volumes:
      - ${VAULT_PATH:-/path/to/your/vault}:/vault:ro
    environment:
      # Service connections
      - CHROMADB_URL=http://chromadb:8000
      - OLLAMA_URL=http://ollama:11434
      - REDIS_URL=redis://redis:6379

      # API configuration
      - API_HOST=0.0.0.0
      - API_PORT=8080
      - API_WORKERS=${API_WORKERS:-4}
      - VAULT_PATH=/vault

      # Authentication (optional)
      - API_KEY=${API_KEY:-}

      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      chromadb:
        condition: service_healthy
      ollama:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - querymind-network
    profiles:
      - full  # Only start with --profile full

volumes:
  chromadb_data:
    driver: local
  ollama_data:
    driver: local
  redis_data:
    driver: local
  querymind_sessions:
    driver: local

networks:
  querymind-network:
    driver: bridge
